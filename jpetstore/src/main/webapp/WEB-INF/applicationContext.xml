<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2010-2016 the original author or authors. Licensed under the 
	Apache License, Version 2.0 (the "License"); you may not use this file except 
	in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
     http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

	<!-- in-memory database and a datasource <jdbc:embedded-database id="dataSource"> 
		<jdbc:script location="classpath:database/jpetstore-hsqldb-schema.sql"/> 
		<jdbc:script location="classpath:database/jpetstore-hsqldb-dataload.sql"/> 
		<jdbc:script location="classpath:database/jpetstore-account.sql"/> </jdbc:embedded-database> -->

	<!-- ##### Oracle 11gR2 JNDI DataSource 설정 ##### <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<property name="jndiName" value="jdbc/jpetstore"/> <property name="resourceRef" 
		value="true" /> </bean> -->

	<!-- ##### Oracle 11gR2 DBCP DataSource 설정 ##### -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@192.168.10.20:1521:orcl" />
		<property name="username" value="jpetstore" />
		<property name="password" value="jadecross" />
		<property name="initialSize" value="0" />
		<property name="maxActive" value="20" />
		<property name="maxIdle" value="8" />
		<property name="minIdle" value="0" />
		<property name="maxWait" value="-1" />
	</bean>


	<!-- transaction manager, use DataSourceTransactionManager" for JDBC local 
		tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- enable component scanning and autowire (beware that this does not enable 
		mapper scanning!) -->
	<context:component-scan
		base-package="org.mybatis.jpetstore.service" />

	<!-- enable transaction demarcation with annotations -->
	<tx:annotation-driven />

	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage"
			value="org.mybatis.jpetstore.domain" />
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<mybatis:scan base-package="org.mybatis.jpetstore.mapper" />
</beans>
